package example.binarylight;

import org.fourthline.cling.UpnpService;
import org.fourthline.cling.UpnpServiceImpl;
import org.fourthline.cling.binding.*;
import org.fourthline.cling.binding.annotations.*;
import org.fourthline.cling.model.*;
import org.fourthline.cling.model.meta.*;
import org.fourthline.cling.model.types.*;

public class BinaryLightServer implements Runnable {
	public static void main(String[] args) throws Exception {
		// Start a user thread that runs the UPnP stack
		Thread serverThread = new Thread(new BinaryLightServer());
		serverThread.setDaemon(false);
		serverThread.start();
	}

	public void run() {
		final UpnpService upnpService = new UpnpServiceImpl();
		Runtime.getRuntime().addShutdownHook(new Thread() {
			@Override
			public void run() {
				upnpService.shutdown();
			}
		});

		// add the bound local device
		upnpService.getRegistry().addDevice(createDevice());
	}

	LocalDevice createDevice() throws ValidationException, LocalServiceBindingException, IOException {
		DeviceIdentity identity = new DeviceIdentity(UDN.uniqueSystemidentifier("Demo Binary Light"));

		DeviceType type = new UDADeviceType("BinaryLight", 1);

		DeviceDetails details = new DeviceDetails("Friendly Binary Light", new ManufacturerDetails("ACME"),
				new ModelDetails("BinLight2000", "A demo light with on/off switch.", "v1"));
	}
}
